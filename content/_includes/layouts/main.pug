doctype html
head
  meta(charset='utf-8')
  meta(name='viewport' content='width=device-width,initial-scale=1.0')
  meta(name='theme-color' content='#333333')
  //- link(rel='manifest' href='manifest.json')
  title=title

  link(rel='icon' type='image/png' href='/icons/favicon-32x32.png')
  link(rel='stylesheet', href='/styles/main.css')
//-   // Webmentions via webmention.io
//-   link(rel='webmention' href='https://webmention.io/jamesjnadeau.com/webmention')
//-   link(rel='pingback' href='https://webmention.io/jamesjnadeau.com/xmlrpc')

body
  //- a.d-none(rel='me' href='https://github.com/jamesjnadeau') https://github.com/jamesjnadeau

  //- main content

  //- pre !{JSON.stringify(Object.keys(this), null, 2)}
  //- pre !{JSON.stringify(Object.keys(arguments[0]), null, 2)}
  //- pre !{JSON.stringify(Object.keys(collections.all), null, 2)}



  //- - var nav_items = eleventyNavigationPlugin.getDependencyGraph(collections.all).nodes
  //- //- pre !{JSON.stringify(nav_items, null, 2)}
  //- each item in nav_items 
  //-   li
  //-     a(href=item.url)=item.key


  nav#header.navbar.navbar-expand-lg.navbar-dark.fixed-top
    .container.p-2
      a.brand.navbar-brand(href='/', on:click='{linkClicked}')
        span.h-card.u-url.u-uid(rel='me', href='https://jamesjnadeau.com/')
          | James J Nadeau
      button.navbar-toggler(type='button' data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls='navbarSupportedContent', aria-label='Toggle Main navigation')
        span.navbar-toggler-icon
      #navbarSupportedContent.navbar-collapse.collapse
        ul.navbar-nav.d-flex.justify-content-around.align-items-center.w-100
          a.nav-item.text-white.p1(href='/projects/')
            | Projects
          a.nav-item.text-white.p1(href='/til/')
            | Today I ...
          //- a.nav-item.text-white.p1(href='/curated/')
          //-   | Curated
          a.nav-item.text-white.p1(href='/reference/')
            | Reference
          a.nav-item.text-white.p1(href='https://github.com/jamesjnadeau/', rel='me')
            img.github-logo.img-fluid(alt='GitHub Octocat Mark', src='/files/GitHub-Mark-Light-120px-plus.png')
  //- end nav
  #wrap(data-barba="wrapper")
    #container.container.md-8.animated.fadeInRight(data-barba="container" data-barba-namespace=page.url)
      .content()
      | !{content}
    


  //- Scripts
  script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js', integrity='sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL', crossorigin='anonymous')
  //- script(src='https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js')
  script(src='https://cdn.jsdelivr.net/npm/headroom.js@0.12.0/dist/headroom.min.js')
  script(src="https://cdn.jsdelivr.net/npm/@barba/core")
  script. 
    //hide the header on scroll
    var init_headroom = function() {
      // grab an element
      var myElement = document.querySelector("#header");

      // global Headroom
      // construct an instance of Headroom, passing the element
      var headroom = new Headroom(myElement); // eslint-disable-line
      // initialise
      headroom.init();
    };
    init_headroom();
  script().
    var inAnimationClass = 'fadeInRight';
    var outAnimationClass = 'fadeOutLeft';
    barba.init({
      transitions: [{
        name: 'default-transition',
        leave(data) {
          target = data.current.container
          target.classList.remove(inAnimationClass);
          target.classList.add(outAnimationClass);
          var promise = new Promise(function(resolve, reject) {
            target.addEventListener('animationend', function(event) {
              target.style.display = 'none'; // hide leaving page after animation is complete
              resolve();
            },{once: true}); // remove event after run once
          });
          return promise;
        },
        enter(data) {
          target = data.next.container
          target.classList.remove('animated');
          var promise = new Promise(function(resolve, reject) {
            target.addEventListener('animationend', function(event) {
              resolve();
            },{once: true}); // remove event after run once
          });
          target.classList.add('animated')
          return promise;
        }
      }]
    });

   

  

    